syntax = "proto3";

package pos;

option go_package="github.com/Andrewalifb/alpha-pos-system-company-service";

import "google/protobuf/timestamp.proto";
import "alpha-pos-system-company-service/api/proto/common.proto";

// PosCompany
message PosCompany {
  string company_id = 1;
  string company_name = 2;
  google.protobuf.Timestamp created_at = 3;
  string created_by = 4;
  google.protobuf.Timestamp updated_at = 5;
  string updated_by = 6;
}

// Request and Response messages
message CreatePosCompanyRequest {
  PosCompany pos_company = 1;
  JWTPayload jwt_payload = 2;
}

message CreatePosCompanyResponse {
  PosCompany pos_company = 1;
}

message ReadPosCompanyRequest {
  string company_id = 1;
  JWTPayload jwt_payload = 2;
}

message ReadPosCompanyResponse {
  PosCompany pos_company = 1;
}

message UpdatePosCompanyRequest {
  PosCompany pos_company = 1;
  JWTPayload jwt_payload = 2;
}

message UpdatePosCompanyResponse {
  PosCompany pos_company = 1;
}

message DeletePosCompanyRequest {
  string company_id = 1;
  JWTPayload jwt_payload = 2;
}

message DeletePosCompanyResponse {
  bool success = 1;
}

message ReadAllPosCompaniesRequest {
  int32 limit = 1;
  int32 page = 2;
  JWTPayload jwt_payload = 3;
}

message ReadAllPosCompaniesResponse {
  repeated PosCompany pos_companies = 1;
  int32 limit = 2;
  int32 page = 3;
  int32 max_page = 4;
  int64 count = 5;
}

// PosCompanyService
service PosCompanyService {
  rpc CreatePosCompany(CreatePosCompanyRequest) returns (CreatePosCompanyResponse);
  rpc ReadPosCompany(ReadPosCompanyRequest) returns (ReadPosCompanyResponse);
  rpc UpdatePosCompany(UpdatePosCompanyRequest) returns (UpdatePosCompanyResponse);
  rpc DeletePosCompany(DeletePosCompanyRequest) returns (DeletePosCompanyResponse);
  rpc ReadAllPosCompanies(ReadAllPosCompaniesRequest) returns (ReadAllPosCompaniesResponse);
}
